ggplot2::ggplot(data = df) + ggplot2::geom_point(ggplot2::aes(x = d, y = ld)) +
ggplot2::geom_line(ggplot2::aes(x = d, y = s))
}
plotLD <- function(dMout) {
df <- data.frame(d = dMout[['d']], ld = dMout[['ld']])
## fit a spline here
scamD <- scam::scam(formula = ld~s(d, bs = "mdcx"), data = df)
df$s <- scam::predict.scam(scamD)
ggplot2::ggplot(data = df) + ggplot2::geom_point(ggplot2::aes(x = d, y = ld)) +
ggplot2::geom_line(ggplot2::aes(x = d, y = s)) +
ggplot2::theme_bw()
}
plotLD <- function(dMout) {
df <- data.frame(d = dMout[['d']], ld = dMout[['ld']])
## fit a spline here
scamD <- scam::scam(formula = ld~s(d, bs = "mdcx"), data = df)
df$s <- scam::predict.scam(scamD)
ggplot2::ggplot(data = df) + ggplot2::geom_point(ggplot2::aes(x = d, y = ld)) +
ggplot2::geom_line(ggplot2::aes(x = d, y = s))
}
plotLD(A)
?scam::scam
plotLD <- function(dMout, dof = 8) {
df <- data.frame(d = dMout[['d']], ld = dMout[['ld']])
## fit a spline here
scamD <- scam::scam(formula = ld~s(d, bs = "mdcx", k = dof), data = df)
df$s <- scam::predict.scam(scamD)
ggplot2::ggplot(data = df) + ggplot2::geom_point(ggplot2::aes(x = d, y = ld)) +
ggplot2::geom_line(ggplot2::aes(x = d, y = s))
}
plotLD(t)
t
plotLD(A)
plotLD(A, dof = 2)
plotLD(A, dof = 4)
plotLD(A, dof = 5)
plotLD(A, dof = 5)
setwd("~/Genomics/ldsep/R")
file.remove("plot_ld.R")
file.edit("plotLD.R")
file.remove("ldplot.R")
myChrom <- chroms1[chroms1$chrom == "PGSC0003DMB000000192", ]
chroms1 <- data.frame(chrom = seqnames(rowRanges(uit)))
devtools::load_all(path = "~/Genomics/ldsep/")
library(updog)
library(VariantAnnotation)
file <- "~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf"
uit <- readVcf(file)
uit <- readVcf(file)
data.frame(chrom = seqnames(rowRanges(uit)))
443 + 752 + 349 + 1
443 + 752 + 349 + 2281
fourthChrom <- start(ranges(rowRanges(uit)))[(1545):(3825)] # PGSC0003DMB000000004
237 + 125
thisRange <- fourthChrom[0:362]
thisRange <- fourthChrom[0:362]
range <- fourthChrom[0:362]
plot(range)
range <- fourthChrom[0:361]
plot(range)
range <- fourthChrom[237:361]
plot(range)
range <- fourthChrom[237:362]
plot(range)
range <- fourthChrom[236:361]
plot(range)
range <- fourthChrom[237:361]
plot(range)
min(range)
rng <- GRanges(seqnames = "PGSC0003DMB000000004", paste0(min(range),"..", max(range)))
chrom <- "PGSC0003DMB000000004"
rng <- GRanges(seqnames = chrom, paste0(min(range),"..", max(range)))
rng
rng <- GRanges(seqnames = chrom, paste0(min(range),"..", max(range)))
param <- ScanVcfParam(which = rng)
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
(compressVcf)
subuit <- readVcf(tab,genome = "h", param)
tab <- indexVcf(compressVcf)
subuit <- readVcf(tab,genome = "h", param)
subuit
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
library(updog)
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
devtools::load_all(path = "~/Genomics/ldsep/")
devtools::load_all(path = "~/Genomics/ldsep/")
gparray <- gl_to_gp(glarray)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
ldout
dim(ldout$ldmat)
ldout
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
meanPD
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
quantPD
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
medianPD
plotLD(meanPD)
plotLD(medianPD)
plotLD(quantPD)
ncombine <- dataMaster(ldout, combineDist = FALSE)
plotLD(ncombine)
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(ncombine)
plotLD(meanPD)
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(medianPD)
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(ncombine)
library(ggplot2)
ncombine
qplot(x = ncombine$d, x = ncombine$ld)
ncombine$d
ncombine$ld
ncombine <- dataMaster(ldout, combineDist = FALSE)
qplot(x = ncombine$d, x = ncombine$ld)
qplot(x = ncombine$d, y = ncombine$ld)
qplot(x = ncombine$d, y = ncombine$ld) + geom_smooth()
qplot(x = ncombine$d, y = ncombine$ld) + geom_smooth(colour = "red")
devtools::load_all(path = "~/Genomics/ldsep/")
file <- "~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf"
uit <- readVcf(file)
chrom <- "PGSC0003DMB000000004"
fourthChrom <- start(ranges(rowRanges(uit)))[(1545):(3825)]
range <- fourthChrom[237:361]
rng <- GRanges(seqnames = chrom, paste0(min(range),"..", max(range)))
param <- ScanVcfParam(which = rng)
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
tab <- indexVcf(compressVcf)
tab <- indexVcf(compressVcf)
subuit <- readVcf(tab,genome = "h", param)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
devtools::load_all(path = "~/Genomics/ldsep/")
gparray <- gl_to_gp(glarray)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
ldout
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
ncombine <- dataMaster(ldout, combineDist = FALSE)
plotLD(meanPD)
plotLD(medianPD)
plotLD(quantPD)
plotLD(ncombine)
plotLD(quantPD)
plotLD(meanPD)
plotLD(medianPD)
plotLD(quantPD)
plotLD(meanPD, dof = 2)
plotLD(meanPD, dof = 3)
plotLD(meanPD, dof = 4)
plotLD(meanPD, dof = 10)
plotLD(meanPD, dof = 100)
set.seed(10)
loc <- c(1, 2, 3, 4)
ldmat <- matrix(runif(16), nrow = 4)
testld <- list(loc = loc, ldmat = ldmat)
testld
set.seed(10)
loc <- c(1, 2, 3, 4)
ldmat <- matrix(runif(16), nrow = 4)
testld <- list(loc = loc, ldmat = ldmat)
t <- dataMaster(testld, combineDist = FALSE)
B <- dataMaster(testld, combineDist = TRUE, combineSS = 'median')
A <- dataMaster(testld, combineDist = TRUE, combineSS = 'mean')
C <- dataMaster(testld, combineDist = TRUE, combineSS = 'quantile')
C
B
A
t
plotLD(t, dof = 5)
plotLD(t, dof = 4)
plotLD(t, dof = 2)
plotLD(t, dof = 3)
plotLD(t, dof = 4)
plotLD(t, dof = 5)
plotLD(t, dof = 6)
plotLD(t, dof = 7)
A
seq(.001)
seq.int(1, 2)
seq(1, by = .02)
seq(1, 10, by = .02)
A$ld = seq(0, 1, by = 0.02)
A$ld
length(A$ld)
A$d = exp(A$ld + runif(51))
A$d
plot(A$d, A$ld)
plotLD(A, dof = 5)
A$d = -exp(A$ld + runif(51))
plot(A$d, A$ld)
plotLD(A, dof = 5)
plotLD(A, dof = 7)
plotLD(A, dof = 4)
A$ld = seq(0, 1, by = 0.01)
length(A$ld)
A$d = -exp(A$ld + runif(101))
plotLD(A, dof = 4)
plot(A$d, A$ld)
plotLD(A, dof = 7)
plotLD(A, dof = 10)
plotLD(A, dof = 20)
plotLD(A, dof = 30)
plotLD(A, dof = 40)
plotLD(A, dof = 40) + geom_smooth()
plotLD(A, dof = 40)
plotLD(A, dof = 50)
plotLD(A, dof = 50)
A$ld = seq(0, 1, by = 0.005)
length(A$ld)
A$d = -exp(A$ld + runif(201))
plot(A$ld, A$d)
plot(A$d, A$ld)
plotLD(A, dof = 50)
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(A, dof = 50)
plot(A$d, A$ld)
A$d = -log(abs(A$ld + runif(201)))
plot(A$d, A$ld)
plotLD(A, dof = 50)
plotLD(A, dof = 20)
plotLD(A, dof = 10)
plotLD(A, dof = 5)
A$ld = seq(0, 1, by = 0.005)
A$d = -log(abs(A$ld + runif(201)))
plotLD(A, dof = 5)
set.seed(10)
A$ld = seq(0, 1, by = 0.005)
A$d = -log(abs(A$ld + runif(201)))
plotLD(A, dof = 5)
plotLD(A, dof = 10)
plotLD(A, dof = 50)
plotLD(A, dof = 8)
chroms1
fourthChrom <- start(ranges(rowRanges(uit)))
fourthChrom
fourthChrom[fourthChrom$chrom == "PGSC0003DMB000000192", ]
# so first fine the chrom you want then you can put it in a datafraem
ChromDF <- start(ranges(rowRanges(uit)))
ChormDF
ChromDF <- start(ranges(rowRanges(uit)))
ChromDF
ChromDF <- data.frame(seqnames(rowRanges(uit)))
ChromDF
ChromDF$chrom
ChromDF == 'PGSC0003DMB000000001'
ChromDF <- data.frame(chrom = seqnames(rowRanges(uit)))
ChromDF
myChrom <- ChromDF[ChromDF$chrom == "PGSC0003DMB000000001", ]
myChrom
ChromDF <- data.frame(chrom = seqnames(rowRanges(uit)))
ChromDF$row_num <- seq.int(nrow(ChromDF))
myChrom <- ChromDF[ChromDF$chrom == "PGSC0003DMB000000001", ]
myChrom
chrom <- "PGSC0003DMB000000001"
ChromDF[ChromDF$chrom == chrom, ]
min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])
chrom <- start(ranges(rowRanges(uit)))[min(ChromDF[ChromDF$chrom == chrom, ][['row_num']]):max(ChromDF[ChromDF$chrom == chrom, ][['row_num']])]
chrom
indicies <- start(ranges(rowRanges(uit)))[min(ChromDF[ChromDF$chrom == chrom, ][['row_num']]):max(ChromDF[ChromDF$chrom == chrom, ][['row_num']])]
indicies <- start(ranges(rowRanges(uit)))[min(ChromDF[ChromDF$chrom == chrom, ][['row_num']]):max(ChromDF[ChromDF$chrom == chrom, ][['row_num']])]
indicies <- start(ranges(rowRanges(uit)))[min(ChromDF[ChromDF$chrom == chrom, ][['row_num']]):max(ChromDF[ChromDF$chrom == chrom, ][['row_num']])]
indicies <- start(ranges(rowRanges(uit)))[(min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])):(max(ChromDF[ChromDF$chrom == chrom, ][['row_num']]))]
devtools::load_all(path = "~/Genomics/ldsep/")
file <- "~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf"
uit <- readVcf(file)
uit <- readVcf(file)
ChromDF <- data.frame(chrom = seqnames(rowRanges(uit)))
ChromDF$row_num <- seq.int(nrow(ChromDF))
chrom <- "PGSC0003DMB000000001"
indicies <- start(ranges(rowRanges(uit)))[(min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])):(max(ChromDF[ChromDF$chrom == chrom, ][['row_num']]))]
indicies
rng <- GRanges(seqnames = chrom, paste0(min(indicies),"..", max(indicies)))
param <- ScanVcfParam(which = rng)
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
tab <- indexVcf(compressVcf)
tab <- indexVcf(compressVcf)
subuit <- readVcf(tab,genome = "h", param)
subuit
plot(indicies)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
gparray <- gl_to_gp(glarray)
gparray <- gl_to_gp(glarray)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
plotLD(meanPD)
plot(indicies)
indicies[300:400]
subindicies <- indicies[300:400]
plot(subindicies)
subindicies <- indicies[290:400]
plot(subindicies)
subindicies <- indicies[293:400]
plot(subindicies)
subindicies <- indicies[292:400]
plot(subindicies)
subindicies <- indicies[293:400]
plot(subindicies)
subindicies <- indicies[293:410]
plot(subindicies)
subindicies <- indicies[293:405]
plot(subindicies)
subindicies <- indicies[293:404]
plot(subindicies)
subindicies <- indicies[293:405]
plot(subindicies)
subindicies <- indicies[293:404]
plot(subindicies)
subindicies <- indicies[293:404]
rng <- GRanges(seqnames = chrom, paste0(min(subindicies),"..", max(subindicies)))
param <- ScanVcfParam(which = rng)
subuit <- readVcf(tab,genome = "h", param)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
gparray <- gl_to_gp(glarray)
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
plotLD(meanPD)
plotLD(medianPD)
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
plotLD(medianPD)
meanPD
meanPD
df <- data.frame(ld = meanPD$ld, d = meanPD$d)
lm(ld ~ d, data = df)
ggplot2::qplot(x = df$d, y = df$ld) +
ggplot2::geom_smooth(formula = "lm")
ggplot2::qplot(x = df$d, y = df$ld) +
ggplot2::geom_smooth(method = "lm")
ggplot2::qplot(x = df$d, y = df$ld) +
ggplot2::geom_smooth(method = "smooth")
ggplot2::qplot(x = df$d, y = df$ld) +
ggplot2::geom_smooth()
seqnames(rowRanges(uit))
chrom <- "PGSC0003DMB000000002"
indicies <- start(ranges(rowRanges(uit)))[(min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])):(max(ChromDF[ChromDF$chrom == chrom, ][['row_num']]))]
indicies
length(indicies)
plot(indicies)
subindicies <- indicies[210:404]
plot(subindicies)
subindicies <- indicies[210:403]
subindicies <- indicies[210:402]
plot(subindicies)
subindicies <- indicies[210:401]
plot(subindicies)
subindicies <- indicies[205:401]
plot(subindicies)
subindicies <- indicies[209:401]
plot(subindicies)
subindicies <- indicies[210:401]
plot(subindicies)
subindicies <- indicies[210:350]
plot(subindicies)
subindicies <- indicies[210:340]
plot(subindicies)
subindicies <- indicies[210:320]
plot(subindicies)
subindicies <- indicies[210:325]
plot(subindicies)
subindicies <- indicies[210:322]
plot(subindicies)
subindicies <- indicies[210:321]
plot(subindicies)
rng <- GRanges(seqnames = chrom, paste0(min(subindicies),"..", max(subindicies)))
param <- ScanVcfParam(which = rng)
subuit <- readVcf(tab,genome = "h", param)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
gparray <- gl_to_gp(glarray)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
plotLD(meanPD)
plotLD(medianPD)
medianPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'median')
ncombine <- dataMaster(ldout, combineDist = FALSE)
plotLD(ncombine)
plotLD(quantPD)
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
plotLD(quantPD)
plotLD(medianPD)
plotLD(ncombine)
plotLD(ncombine) + ggplot2::theme_minimal()
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(ncombine) + ggplot2::theme_minimal()
plotLD(quantPD)
plotLD(medianPD)
plotLD(medianPD, points = TRUE)
plotLD(medianPD, points = TRUE)
devtools::load_all(path = "~/Genomics/ldsep/")
plotLD(medianPD, points = TRUE)
plotLD(medianPD, points = FALSE)
plotLD(ncombine) + ggplot2::theme_minimal()
plotLD(quantPD, points = TRUE)
plotLD(ncombine) + ggplot2::theme_minimal()
subindicies <- indicies##[210:321]
rng <- GRanges(seqnames = chrom, paste0(min(subindicies),"..", max(subindicies)))
param <- ScanVcfParam(which = rng)
subuit <- readVcf(tab,genome = "h", param)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
gparray <- gl_to_gp(glarray)
gparray <- gl_to_gp(glarray)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
dim(ldout$ldmat)
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
plotLD(meanPD)
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
plotLD(quantPD, points = FALSE)
4 * exp(6)
chrom <- "PGSC0003DMB000000003"
indicies <- start(ranges(rowRanges(uit)))[(min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])):(max(ChromDF[ChromDF$chrom == chrom, ][['row_num']]))]
length(indicies)
indicies <- start(ranges(rowRanges(uit)))[(min(ChromDF[ChromDF$chrom == chrom, ][['row_num']])):(max(ChromDF[ChromDF$chrom == chrom, ][['row_num']]))]
subindicies <- indicies##[210:321]
rng <- GRanges(seqnames = chrom, paste0(min(subindicies),"..", max(subindicies)))
param <- ScanVcfParam(which = rng)
compressVcf <- bgzip("~/Documents/DavidSimulation/data/uit/NewPlusOldCalls.headed.vcf", tempfile())
param <- ScanVcfParam(which = rng)
param <- ScanVcfParam(which = rng)
subuit <- readVcf(tab,genome = "h", param)
subuit <- readVcf(tab,genome = "h", param)
param <- ScanVcfParam(which = rng)
subuit <- readVcf(tab,genome = "h", param)
position <- ranges(subuit)
posFrame <- data.frame(row.names = names(position), pos = start(position))
sizemat <- geno(subuit)$DP
refmat <- geno(subuit)$RA
ploidy <- 4
mout <- multidog(refmat = refmat,
sizemat = sizemat,
ploidy = ploidy,
model = "norm")
varnames <- paste0("logL_", 0:ploidy)
glarray <- format_multidog(x = mout, varname = varnames)
ldout <- ldfast(gp = gparray, loc = posFrame[['pos']], type = "r2", shrinkrr = FALSE)
quantPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'quantile', quantile = 0.9)
ldout
meanPD <- dataMaster(ldout, combineDist = TRUE, combineSS = 'mean')
ldout
View(ldout$ldmat)
