% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multild.R
\name{mldest_genolike}
\alias{mldest_genolike}
\title{Estimate all pair-wise LD's in a collection of SNPs using the genotype
likelihoods.}
\usage{
mldest_genolike(
  genoarray,
  nc = 1,
  type = c("hap", "comp"),
  pen = ifelse(type == "hap", 2, 1),
  se = TRUE
)
}
\arguments{
\item{genoarray}{A three-way array of genotype \emph{log}-likelihoods.
The first dimension indexes the SNPs, the second dimension indexes
the individuals, and the third dimension indexes the genotypes.
That is, \code{genolike_array[i, j, k]} is the genotype log-likelihood
at SNP \code{i} for individual \code{j} and dosage \code{k - 1}.
The ploidy (assumed to be the same for all individuals) is assumed to
be one minus the size of the third dimension.}

\item{nc}{The number of computing cores to use. This should never be
more than the number of cores available in your computing environment.
You can determine the maximum number of available cores by running
\code{parallel::detectCores()} in R. This is probably fine for a
personal computer, but some environments are only
able to use fewer. Ask your admins if you are unsure.}

\item{type}{The type of LD to calculate. The available types are
haplotypic LD (\code{type = "hap"}) or composite LD
(\code{type = "comp"}). Haplotypic LD is only appropriate for
autopolyploids when the individuals are in Hardy-Weinberg
equilibrium (HWE). The composite
measures of LD are always applicable, and consistently estimate the
usual measures of LD when HWE is fulfilled in autopolyploids.
However, when HWE is not fulfilled, interpreting the
composite measures of LD could be a little tricky.}

\item{pen}{The penalty to be applied to the likelihood. You can think about
this as the prior sample size.}

\item{se}{A logical. Should we calculate standard errors (\code{TRUE}) or
not (\code{FALSE}). Calculating standard errors can be really slow
when \code{type = "comp"}, \code{model = "flex"}, and when using
gentoype likelihoods. Otherwise, standard error calculations
should be pretty fast.}
}
\value{
A data frame of class \code{c("lddf", "data.frame")}
with some or all of the following elements:
\describe{
\item{\code{i}}{The index of the first SNP.}
\item{\code{j}}{The index of the second SNP.}
\item{\code{D}}{The estimate of the LD coefficient.}
\item{\code{D_se}}{The standard error of the estimate of
the LD coefficient.}
\item{\code{r2}}{The estimate of the squared Pearson correlation.}
\item{\code{r2_se}}{The standard error of the estimate of the
squared Pearson correlation.}
\item{\code{r}}{The estimate of the Pearson correlation.}
\item{\code{r_se}}{The standard error of the estimate of the
Pearson correlation.}
\item{\code{Dprime}}{The estimate of the standardized LD
coefficient.}
\item{\code{Dprime_se}}{The standard error of the estimate of the
standardized LD coefficient.}
\item{\code{z}}{The Fisher-z transformation of \code{r}.}
\item{\code{z_se}}{The standard error of the Fisher-z
transformation of \code{r}.}
\item{\code{p_ab}}{The estimated haplotype frequency of ab.
Only returned if estimating the haplotypic LD.}
\item{\code{p_Ab}}{The estimated haplotype frequency of Ab.
Only returned if estimating the haplotypic LD.}
\item{\code{p_aB}}{The estimated haplotype frequency of aB.
Only returned if estimating the haplotypic LD.}
\item{\code{p_AB}}{The estimated haplotype frequency of AB.
Only returned if estimating the haplotypic LD.}
\item{\code{q_ij}}{The estimated frequency of genotype i at locus 1
and genotype j at locus 2. Only returned if estimating the
composite LD.}
}
}
\description{
This function will run \code{\link{ldest}()} iteratively over
all possible pairs of SNPs provided. Support is provided for parallelization
through the doParallel and foreach packages.
}
\examples{
set.seed(1)

## Simulate some data with true correlation of 0
nloci <- 5
nind  <- 100
K <- 6
nc <- 1
genovec <- sample(0:K, nind * nloci, TRUE)
genomat <- matrix(genovec, nrow = nloci)
genoarray <- array(sapply(genovec,
                          stats::dnorm,
                          x = 0:K,
                          sd = 1,
                          log = TRUE),
                   dim = c(K + 1, nloci, nind))
genoarray <- aperm(genoarray, c(2, 3, 1)) ## loci, individuals, dosages

## Verify simulation
locnum <- sample(seq_len(nloci), 1)
indnum <- sample(seq_len(nind), 1)
genoarray[locnum, indnum, ]
stats::dnorm(x = 0:K, mean = genomat[locnum, indnum], sd = 1, log = TRUE)

## Haplotypic LD estimates
rdf_hap <- mldest_genolike(genoarray = genoarray,
                           nc = nc,
                           type = "hap")

## Composite LD estimates
rdf_comp <- mldest_genolike(genoarray = genoarray,
                            nc = nc,
                            type = "comp",
                            se = FALSE)

## Haplotypic and Composite LD are both close to 0.
## But composite is more variable.
Dmat <- cbind(Haplotypic = rdf_hap$D, Composite = rdf_comp$D)
boxplot(Dmat,
        main = "Estimates of D",
        ylab = "D Estimate",
        xlab = "Type")
abline(h = 0, lty = 2, col = 2)

}
\author{
David Gerard
}
